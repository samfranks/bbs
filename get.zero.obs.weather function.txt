###############################################################
######    GETTING BBS DATA INTO THE RIGHT FORMAT FOR     ######
#############        DISTANCE ANALYSIS IN R      ##############
###############################################################

#  Written by Ali Johnston July 2009

get.zero.obs.weather<-function(yr){

# setwd("Z:/bbs")
# Don't forget to set the working directory.
# "yr" is the four-digit year, e.g. "1994" or "2005"
# This function creates a dataframe for a given year, with one row for each
# visit made to each square.  This records the weather and speed for each 
# visit, whether or not any observations were made.  No species codes are 
# required for this function, as it runs for all squares regardless.

file.name<-paste("ebird",substr(yr,3,4),sep="")
folder.name<-paste("data",substr(yr,3,4),sep="")
file.loc<-paste(folder.name,"/",file.name,sep="")

 dat1<-readLines(file.loc)

# Subsetting 

site<-sapply(1:length(dat1),function(i){substr(dat1[i],5,10)})
eorl<-sapply(1:length(dat1),function(i){substr(dat1[i],21,21)})
siteeorl<-paste(site,eorl,sep="")
sq.vis<-table(siteeorl)
no.sq.vis<-length(sq.vis)

# This bit can take a reasonably long time:
# Finding one row for each "square visit" to get the weather data.

no.trans<-locs<-vector()
for(i in 1:no.sq.vis){
  all.locs<-grep(names(sq.vis[i]),siteeorl)
  locs<-c(locs,all.locs[1])
}

locs<-sort(locs)
dat3<-dat1[locs]


# Creating new variables:

site<-sapply(1:length(dat3),function(i){substr(dat3[i],5,10)})
observer<-sapply(1:length(dat3),function(i){substr(dat3[i],1,4)})
eorl<-sapply(1:length(dat3),function(i){substr(dat3[i],21,21)})


# Weather variables:

cloud<-sapply(1:length(dat3),function(i){substr(dat3[i],22,22)})
rain<-sapply(1:length(dat3),function(i){substr(dat3[i],23,23)})
wind<-sapply(1:length(dat3),function(i){substr(dat3[i],24,24)})
vis<-sapply(1:length(dat3),function(i){substr(dat3[i],25,25)})


# Getting the start and finish times for the two halves:

fhst.hr<-sapply(1:length(dat3),function(i){as.numeric(substr(dat3[i],26,27))})
fhst.mn<-sapply(1:length(dat3),function(i){as.numeric(substr(dat3[i],28,29))})
fhft.hr<-sapply(1:length(dat3),function(i){as.numeric(substr(dat3[i],30,31))})
fhft.mn<-sapply(1:length(dat3),function(i){as.numeric(substr(dat3[i],32,33))})

shst.hr<-sapply(1:length(dat3),function(i){as.numeric(substr(dat3[i],34,35))})
shst.mn<-sapply(1:length(dat3),function(i){as.numeric(substr(dat3[i],36,37))})
shft.hr<-sapply(1:length(dat3),function(i){as.numeric(substr(dat3[i],38,39))})
shft.mn<-sapply(1:length(dat3),function(i){as.numeric(substr(dat3[i],40,41))})


# Caluclating how long the survey took for each half, in mins: 
 
fh.hr<-sapply(1:length(dat3),function(i){ifelse(fhft.hr[i]<fhst.hr[i],fhft.hr[i]+12-fhst.hr[i],fhft.hr[i]-fhst.hr[i])})
fh.hr.mn<-60*fh.hr
fh.mn<-sapply(1:length(dat3),function(i){fhft.mn[i]-fhst.mn[i]})
fh.tt<-fh.hr.mn+fh.mn

sh.hr<-sapply(1:length(dat3),function(i){ifelse(shft.hr[i]<shst.hr[i],shft.hr[i]+12-shst.hr[i],shft.hr[i]-shst.hr[i])})
sh.hr.mn<-60*sh.hr
sh.mn<-sapply(1:length(dat3),function(i){shft.mn[i]-shst.mn[i]})
sh.tt<-sh.hr.mn+sh.mn

bh.tt<-fh.tt+sh.tt

year<-rep(yr,length(dat3))

dataset1<-as.data.frame(cbind(site, observer, year,eorl,
cloud,rain,wind,vis,fh.tt,sh.tt,bh.tt))

dataset1
#####################################################################
}




















